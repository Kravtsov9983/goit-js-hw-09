{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAqCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,KA5CM,CACXQ,QAASC,SAASC,cAAc,SAChCC,WAAYF,SAASC,cAAc,qBACnCE,UAAWH,SAASC,cAAc,oBAClCG,OAAQJ,SAASC,cAAc,wBAG5BF,QAAQM,iBAAiB,UAmB9B,SAAuBC,GACrBA,EAAMC,iBACN,IAAMH,EAASI,OAAOF,EAAMG,OAAOL,OAAOM,OACpCnB,EAAQiB,OAAOF,EAAMG,OAAOlB,MAAMmB,OAClCC,EAAOH,OAAOF,EAAMG,OAAOE,KAAKD,QArBxC,SAAyBN,EAAQb,EAAOoB,GACtC,IAAK,IAAIC,EAAI,EAAGA,GAAKR,EAAQQ,GAAK,EAAG,CAEnCvB,EAAcuB,EADFrB,EAAQoB,GAAQC,EAAI,IAE7BC,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUyB,EAAKD,EAALvB,MACjB,OAAOyB,EAAA7B,GAAS8B,OAAOC,QACrB,uBAAwCC,OAAf7B,EAAS,QAAY6B,OAANJ,EAAM,M,IAGjDK,OAAM,SAAAN,G,IAAGxB,EAAQwB,EAARxB,SAAUyB,EAAKD,EAALvB,MAClB,OAAOyB,EAAA7B,GAAS8B,OAAOI,QACrB,sBAAqCF,OAAf7B,EAAS,QAAY6B,OAANJ,EAAM,M,KAYnDO,CAAgBlB,EAAQb,EAAOoB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  formEls: document.querySelector('.form'),\n  firstDelay: document.querySelector('input[name=delay]'),\n  delayStep: document.querySelector('input[name=step]'),\n  amount: document.querySelector('input[name=amount]'),\n};\n\nrefs.formEls.addEventListener('submit', onCatFunction);\n\nfunction onCycleFunction(amount, delay, step) {\n  for (let i = 1; i <= amount; i += 1) {\n    let total = delay + step * (i - 1);\n    createPromise(i, total)\n      .then(({ position, delay }) => {\n        return Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        return Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n\nfunction onCatFunction(event) {\n  event.preventDefault();\n  const amount = Number(event.target.amount.value);\n  const delay = Number(event.target.delay.value);\n  const step = Number(event.target.step.value);\n\n  onCycleFunction(amount, delay, step);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","formEls","document","querySelector","firstDelay","delayStep","amount","addEventListener","event","preventDefault","Number","target","value","step","i","then","param","_$delay","$parcel$interopDefault","Notify","success","concat","catch","failure","$ce04d3a99e08e73b$var$onCycleFunction"],"version":3,"file":"03-promises.9a537d03.js.map"}